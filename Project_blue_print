1. Identify my objects

I want to build a news feed application that shows my users recent news article. Using this app, the user can:

- Starts the app and is greeted with a list of options on the menu
- Search news article by keyword in the title
- Select article and is shown the content of that article
- Open an article's publisher's url
- Go back to menu
- Search article again
- Exit the app


2. Identity objects' responsibilities (each object is only responsible for one thing)

Api_Service
- url
- apiKey
- validate_key
- custom_error_wrong_ApiKey
- Parse data from api

Article
- source
- domains
- pageSize
- author
- title
- description
- url
- urlToImage
- publishedAt
- content

Cli
- start
- menu
- user_input
- find articles
- list articles
- open articles
- open publisher
- exit

3. Design CLI interface pattern

3.1.

Prompting the user for input: What would you like to do?

Defining the input interface: I accept: article, index, index open, exit

Accepting user input by yielding to a prompt and waiting patiently for the user to press enter. If the user never enters anything, the program will wait at this state forever until the process is otherwise terminated.

Taking the user input and executing the appropriate sub-routine or procedure that represents that feature. If a user enters 'help', the program should print the help instructions.

Once that feature terminates, the program is back at the start of the main loop.

3.2. example (using program loop)

CLI programs have to continue running and accepting input from the user until they are explicitly exited through sending a termination signal to the program by pressing CTRL+C , or by telling the program to quit or exit through some sort of input.

$ bin/controller

Hi! Welcome to news feed

What would you like to do?
Please enter: article for today's news, index to read an article, open follow by index number to open an article from the publisher's website, exist to exit the app

What would you like to do?
article↵

Today's breaking news article:
1. 
2.
3.

Please enter the article number you would like to read:
1↵

To open an article's url in your brower, enter index number of the article follow by open
1 open↵

This article is currently open in your brower from the publisher's website

To exit the app, enter exit
exit↵


4. Extra
validate api key
input api key
return custom error if invalid api key


Useful url:

## UK news API
https://newsapi.org/s/uk-news-api

## domain: cnn.com api
https://newsapi.org/v2/everything?domains=cnn.com&apiKey=f5ab1ac1a2af4fa98ad39c97e7e4bf34&pageSize=50

## domain: foxnews.com api
https://newsapi.org/v2/everything?domains=foxnews.com&apiKey=f5ab1ac1a2af4fa98ad39c97e7e4bf34&pageSize=50

## qinTitle: apple api
https://newsapi.org/v2/everything?qInTitle=apple&apiKey=f5ab1ac1a2af4fa98ad39c97e7e4bf34&pageSize=50


4. Ideas for improvement

- Immediate show a list of articles after searching
- Show full content in the terminal
- Install gem to interact with CLI to keep it 'clean'
- Add details to make it more presentable such as space and symbols
